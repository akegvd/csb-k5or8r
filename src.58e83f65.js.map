{"version":3,"sources":["src/index.js"],"names":["inputWords","isSpeaking","initWord","buttonSpinId","buttonEditId","formWords","document","getElementById","textAreaInput","displayedWord","msg","SpeechSynthesisUtterance","onstart","onend","randomNumberInRange","max","Math","floor","random","getWordByRandom","words","length","setFormToDisabled","formElement","querySelectorAll","forEach","inputElement","setAttribute","setFormToEnable","removeAttribute","handleClickSpin","value","split","randomedWord","filter","word","innerText","text","window","speechSynthesis","speak","handleClickEdit","remove","createButtonSpin","buttonSpin","createElement","type","id","addEventListener","e","target","body","appendChild","createButtonEdit","buttonEdit","preventDefault"],"mappings":";AAAA,IAAIA,EACAC,GAAa,EACbC,EAAW,0DACTC,EAAe,cACfC,EAAe,cAMfC,EAAYC,SAASC,eAAe,cACpCC,EAAgBF,SAASC,eAAe,SACxCE,EAAgBH,SAASC,eAAe,gBAGxCG,EAAM,IAAIC,yBAChBD,EAAIE,QAAU,WACZX,GAAa,GAEfS,EAAIG,MAAQ,WACVZ,GAAa,GAIf,IAAMa,EAAsB,SAACC,GAC3B,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,IAG9BI,EAAkB,SAACC,GACvB,OAAOA,EAAMN,EAAoBM,EAAMC,UAGnCC,EAAoB,SAACC,GACzBA,EACGC,iBAAiB,2BACjBC,QAAQ,SAACC,GACRA,EAAaC,aAAa,YAAY,GACtCD,EAAaC,aAAa,YAAY,MAItCC,EAAkB,SAACL,GACvBA,EACGC,iBAAiB,2BACjBC,QAAQ,SAACC,GACRA,EAAaG,gBAAgB,YAC7BH,EAAaG,gBAAgB,eAI7BC,EAAkB,WACtB,IAAI7B,EAMJ,IAFAD,EAAaQ,EAAcuB,OAASvB,EAAcuB,MAAMC,MAAM,OAE5ChC,EAAWqB,OAAS,EAAG,CACvC,IAAMY,EAAed,EAAgBnB,GAErCA,EAAaA,EAAWkC,OAAO,SAACC,GAAI,OAAKA,IAASF,IAClDzB,EAAcuB,MAAQ/B,EACtBS,EAAc2B,UAAYH,EAC1BvB,EAAI2B,KAAOJ,EACXK,OAAOC,gBAAgBC,MAAM9B,QAE7BD,EAAc2B,UAAYlC,GAIxBuC,EAAkB,WACtBb,EAAgBvB,GAEhBC,SAASC,eAAeJ,GAAcuC,SACtCpC,SAASC,eAAeH,GAAcsC,UAGlCC,EAAmB,WACvB,IAAMC,EAAatC,SAASuC,cAAc,UAC1CD,EAAWR,UAAY,OACvBQ,EAAWE,KAAO,SAClBF,EAAWG,GAAK5C,EAEhByC,EAAWI,iBAAiB,QAAS,SAACC,GACpCA,EAAEC,OAAOvB,aAAa,YAAY,GAClCG,IACAmB,EAAEC,OAAOrB,gBAAgB,cAG3BvB,SAAS6C,KAAKC,YAAYR,IAGtBS,EAAmB,WACvB,IAAMC,EAAahD,SAASuC,cAAc,UAC1CS,EAAWlB,UAAY,eACvBkB,EAAWR,KAAO,SAClBQ,EAAWP,GAAK3C,EAEhBkD,EAAWN,iBAAiB,QAAS,SAACC,GACpCR,MAGFnC,SAAS6C,KAAKC,YAAYE,IAG5BjD,EAAU2C,iBAAiB,SAAU,SAACC,GACpCA,EAAEM,iBACFjC,EAAkB2B,EAAEC,QACpBP,IACAU,MAGF5C,EAAc2B,UAAYlC","file":"src.58e83f65.js","sourceRoot":"..","sourcesContent":["let inputWords;\nlet isSpeaking = false;\nlet initWord = 'Please fill the word split with comma(,) e.g. \"a,b,c,d\"';\nconst buttonSpinId = \"button-spin\";\nconst buttonEditId = \"button-edit\";\n\n// for test\n// document.getElementById(\"words\").value = inputWords.join(\",\");\n\n// elements\nconst formWords = document.getElementById(\"form-words\");\nconst textAreaInput = document.getElementById(\"words\");\nconst displayedWord = document.getElementById(\"display-word\");\n\n// api speak\nconst msg = new SpeechSynthesisUtterance();\nmsg.onstart = () => {\n  isSpeaking = true;\n};\nmsg.onend = () => {\n  isSpeaking = false;\n};\n\n// Start at 0\nconst randomNumberInRange = (max) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst getWordByRandom = (words) => {\n  return words[randomNumberInRange(words.length)];\n};\n\nconst setFormToDisabled = (formElement) => {\n  formElement\n    .querySelectorAll(\"input, textarea, button\")\n    .forEach((inputElement) => {\n      inputElement.setAttribute(\"readonly\", true);\n      inputElement.setAttribute(\"disabled\", true);\n    });\n};\n\nconst setFormToEnable = (formElement) => {\n  formElement\n    .querySelectorAll(\"input, textarea, button\")\n    .forEach((inputElement) => {\n      inputElement.removeAttribute(\"readonly\");\n      inputElement.removeAttribute(\"disabled\");\n    });\n};\n\nconst handleClickSpin = () => {\n  if (isSpeaking) {\n    return;\n  }\n\n  inputWords = textAreaInput.value && textAreaInput.value.split(\",\");\n\n  if (inputWords && inputWords.length > 0) {\n    const randomedWord = getWordByRandom(inputWords);\n\n    inputWords = inputWords.filter((word) => word !== randomedWord);\n    textAreaInput.value = inputWords;\n    displayedWord.innerText = randomedWord;\n    msg.text = randomedWord;\n    window.speechSynthesis.speak(msg);\n  } else {\n    displayedWord.innerText = initWord;\n  }\n};\n\nconst handleClickEdit = () => {\n  setFormToEnable(formWords);\n\n  document.getElementById(buttonSpinId).remove();\n  document.getElementById(buttonEditId).remove();\n};\n\nconst createButtonSpin = () => {\n  const buttonSpin = document.createElement(\"button\");\n  buttonSpin.innerText = \"Spin\";\n  buttonSpin.type = \"button\";\n  buttonSpin.id = buttonSpinId;\n\n  buttonSpin.addEventListener(\"click\", (e) => {\n    e.target.setAttribute(\"disabled\", true);\n    handleClickSpin();\n    e.target.removeAttribute(\"disabled\");\n  });\n\n  document.body.appendChild(buttonSpin);\n};\n\nconst createButtonEdit = () => {\n  const buttonEdit = document.createElement(\"button\");\n  buttonEdit.innerText = \"Back to Edit\";\n  buttonEdit.type = \"button\";\n  buttonEdit.id = buttonEditId;\n\n  buttonEdit.addEventListener(\"click\", (e) => {\n    handleClickEdit();\n  });\n\n  document.body.appendChild(buttonEdit);\n};\n\nformWords.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  setFormToDisabled(e.target);\n  createButtonSpin();\n  createButtonEdit();\n});\n\ndisplayedWord.innerText = initWord;\n"]}